import { Platform } from "react-native";

export const LIGHT_THEME = {
    dark: false,
    colors: {
        primary: "rgb(80, 78, 197)",
        onPrimary: "rgb(255, 255, 255)",
        primaryContainer: "rgb(226, 223, 255)",
        onPrimaryContainer: "rgb(12, 0, 106)",
        secondary: "rgb(0, 108, 69)",
        onSecondary: "rgb(255, 255, 255)",
        secondaryContainer: "rgb(101, 253, 181)",
        onSecondaryContainer: "rgb(0, 33, 18)",
        tertiary: "rgb(188, 16, 50)",
        onTertiary: "rgb(255, 255, 255)",
        tertiaryContainer: "rgb(255, 218, 217)",
        onTertiaryContainer: "rgb(64, 0, 10)",
        error: "rgb(186, 26, 26)",
        onError: "rgb(255, 255, 255)",
        errorContainer: "rgb(255, 218, 214)",
        onErrorContainer: "rgb(65, 0, 2)",
        background: "rgb(255, 251, 255)",
        onBackground: "rgb(28, 27, 31)",
        surface: "rgb(255, 251, 255)",
        onSurface: "rgb(28, 27, 31)",
        surfaceVariant: "rgb(228, 225, 236)",
        onSurfaceVariant: "rgb(71, 70, 79)",
        outline: "rgb(120, 118, 128)",
        outlineVariant: "rgb(200, 197, 208)",
        shadow: "rgb(0, 0, 0)",
        scrim: "rgb(0, 0, 0)",
        inverseSurface: "rgb(49, 48, 52)",
        inverseOnSurface: "rgb(243, 239, 244)",
        inversePrimary: "rgb(194, 193, 255)",
        elevation: {
            level0: "transparent",
            level1: "rgb(246, 242, 252)",
            level2: "rgb(241, 237, 250)",
            level3: "rgb(236, 232, 249)",
            level4: "rgb(234, 230, 248)",
            level5: "rgb(231, 227, 247)",
        },
        surfaceDisabled: "rgba(28, 27, 31, 0.12)",
        onSurfaceDisabled: "rgba(28, 27, 31, 0.38)",
        backdrop: "rgba(48, 47, 56, 0.4)",
    },
};

export const DARK_THEME = {
    dark: true,
    colors: {
        primary: "rgb(194, 193, 255)",
        onPrimary: "rgb(30, 20, 150)",
        primaryContainer: "rgb(55, 52, 172)",
        onPrimaryContainer: "rgb(226, 223, 255)",
        secondary: "rgb(66, 224, 154)",
        onSecondary: "rgb(0, 56, 34)",
        secondaryContainer: "rgb(0, 82, 51)",
        onSecondaryContainer: "rgb(101, 253, 181)",
        tertiary: "rgb(255, 179, 179)",
        onTertiary: "rgb(104, 0, 22)",
        tertiaryContainer: "rgb(146, 0, 34)",
        onTertiaryContainer: "rgb(255, 218, 217)",
        error: "rgb(255, 180, 171)",
        onError: "rgb(105, 0, 5)",
        errorContainer: "rgb(147, 0, 10)",
        onErrorContainer: "rgb(255, 180, 171)",
        background: "rgb(28, 27, 31)",
        onBackground: "rgb(229, 225, 230)",
        surface: "rgb(28, 27, 31)",
        onSurface: "rgb(229, 225, 230)",
        surfaceVariant: "rgb(71, 70, 79)",
        onSurfaceVariant: "rgb(200, 197, 208)",
        outline: "rgb(145, 143, 154)",
        outlineVariant: "rgb(71, 70, 79)",
        shadow: "rgb(0, 0, 0)",
        scrim: "rgb(0, 0, 0)",
        inverseSurface: "rgb(229, 225, 230)",
        inverseOnSurface: "rgb(49, 48, 52)",
        inversePrimary: "rgb(80, 78, 197)",
        elevation: {
            level0: "transparent",
            level1: "rgb(36, 35, 42)",
            level2: "rgb(41, 40, 49)",
            level3: "rgb(46, 45, 56)",
            level4: "rgb(48, 47, 58)",
            level5: "rgb(51, 50, 62)",
        },
        surfaceDisabled: "rgba(229, 225, 230, 0.12)",
        onSurfaceDisabled: "rgba(229, 225, 230, 0.38)",
        backdrop: "rgba(48, 48, 56, 0.4)",
    },
};

export const Fonts = Platform.select({
    ios: {
        /** iOS `UIFontDescriptorSystemDesignDefault` */
        sans: "system-ui",
        /** iOS `UIFontDescriptorSystemDesignSerif` */
        serif: "ui-serif",
        /** iOS `UIFontDescriptorSystemDesignRounded` */
        rounded: "ui-rounded",
        /** iOS `UIFontDescriptorSystemDesignMonospaced` */
        mono: "ui-monospace",
    },
    default: {
        sans: "normal",
        serif: "serif",
        rounded: "normal",
        mono: "monospace",
    },
    web: {
        sans: "system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif",
        serif: "Georgia, 'Times New Roman', serif",
        rounded:
            "'SF Pro Rounded', 'Hiragino Maru Gothic ProN', Meiryo, 'MS PGothic', sans-serif",
        mono: "SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace",
    },
});
